{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.jsx","components/Searchbar/Searchbar.jsx","components/Container.jsx","components/Loader/Loader.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","API/APIfetchGET.js","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","Button","className","onClick","children","attrs","classes","classNames","s","defaultProps","Searchbar","onSubmit","useState","searchInput","setSearchInput","header","form","e","preventDefault","trim","window","alert","toLowerCase","type","buttonStyles","searchForm","input","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","ContainerStyled","styled","div","Container","LoaderBox","LoaderElem","color","height","width","ImageGalleryItem","imgUrl","description","bigImgURL","item","src","alt","srcSet","image","prototypes","PropTypes","string","isRequired","func","PATH","API_KEY","fetchImages","currentName","a","page","axios","get","resp","data","hits","INITIAL_STATUS","ImageGallery","searchValue","handleModalOpen","images","setImages","error","setError","status","setStatus","moreLoadStatus","setMoreLoadStatus","setPage","imageToScroll","useRef","useEffect","then","length","Error","catch","prevImages","ulElems","current","scrollIntoView","behavior","idleText","errorText","message","title","galleryGrid","ref","map","largeImageURL","webformatURL","tags","srcset","prev","loadMore","modalRoot","document","getElementById","Modal","onClose","addEventListener","handleKeyDown","removeEventListener","code","createPortal","overlay","target","modal","App","setSearchValue","largeImage","setLargeImage","handleModalClose","url","close","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f57ac962.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Searchbar_header__1TjTc\",\"form\":\"Searchbar_form__18MlS\",\"input\":\"Searchbar_input__1bcD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__1Vm7r\",\"image\":\"ImageGalleryItem_image__39MOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3YtRF\",\"modal\":\"Modal_modal__2l1hT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__30I-J\",\"loadMore\":\"Button_loadMore__smeV0\",\"searchForm\":\"Button_searchForm__2noQH\",\"close\":\"Button_close__1yfwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"idleText\":\"ImageGallery_idleText__3NsBN\",\"errorText\":\"ImageGallery_errorText__8Fps_\",\"slideRight\":\"ImageGallery_slideRight__7P1Bg\",\"title\":\"ImageGallery_title__1O25S\",\"galleryGrid\":\"ImageGallery_galleryGrid__B5fjH\"};","import PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport s from './Button.module.css'\r\n\r\nfunction Button({ className, onClick, children, ...attrs }) {\r\n  const classes = classNames(s.Button, className)\r\n\r\n  return (\r\n    <button {...attrs} onClick={onClick} className={classes}>\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n  className: null,\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport { Button }\r\n","import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Button } from '../Button'\r\nimport buttonStyles from '../Button/Button.module.css'\r\n\r\nimport s from './Searchbar.module.css'\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [searchInput, setSearchInput] = useState('')\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    if (searchInput.trim() === '') {\r\n      window.alert('Please, provide search name!')\r\n      setSearchInput('')\r\n      return\r\n    }\r\n\r\n    onSubmit(searchInput.toLowerCase().trim())\r\n    setSearchInput('')\r\n  }\r\n\r\n  return (\r\n    <header className={s.header}>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <Button type=\"submit\" className={buttonStyles.searchForm}>\r\n          <span className=\"button-label\">Search</span>\r\n        </Button>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={e => setSearchInput(e.currentTarget.value)}\r\n          value={searchInput}\r\n        />\r\n      </form>\r\n    </header>\r\n  )\r\n}\r\n\r\nSearchbar.defaultProps = {\r\n  onSubmit: () => null,\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst ContainerStyled = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  height: auto;\r\n  padding: 0 15px;\r\n`\r\n\r\nexport default function Container({ children }) {\r\n  return <ContainerStyled>{children}</ContainerStyled>\r\n}\r\n","import Loader from 'react-loader-spinner'\r\nimport styled from 'styled-components'\r\n\r\nconst LoaderBox = styled.div`\r\n  height: 150px;\r\n  width: 150px;\r\n  margin: 50px auto;\r\n`\r\n\r\nexport default function LoaderElem() {\r\n  return (\r\n    <LoaderBox>\r\n      <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={150} width={150} />\r\n    </LoaderBox>\r\n  )\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport s from './ImageGalleryItem.module.css'\r\n\r\nexport default function ImageGalleryItem({ imgUrl, description, onClick, bigImgURL }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <img src={imgUrl} alt={description} srcSet={bigImgURL} className={s.image} onClick={onClick}></img>\r\n    </li>\r\n  )\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n  description: 'image',\r\n  bigImgURL: '../src/images/DefaultImage.png',\r\n}\r\n\r\nImageGalleryItem.prototypes = {\r\n  imgUrl: PropTypes.string.isRequired,\r\n  bigImgURL: PropTypes.string,\r\n  description: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n","import axios from 'axios'\r\nconst PATH = 'https://pixabay.com/api/'\r\nconst API_KEY = '23596764-fc841aad9a4a9806cf99f02b3'\r\n\r\nexport default async function fetchImages(currentName, page = 1) {\r\n  const resp = await axios.get(\r\n    `${PATH}?q=${currentName}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=9`,\r\n  )\r\n\r\n  return resp.data.hits\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Container from '../Container'\r\nimport Loader from '../Loader'\r\nimport ImageGalleryItem from './ImageGalleryItem'\r\nimport { Button } from '../Button'\r\nimport fetchImages from '../../API/APIfetchGET'\r\n\r\nimport s from './ImageGallery.module.css'\r\nimport buttonStyles from '../Button/Button.module.css'\r\n\r\nconst INITIAL_STATUS = {\r\n  idle: 'idle',\r\n  pending: 'pending',\r\n  rejected: 'rejected',\r\n  resolved: 'resolved',\r\n}\r\n\r\nexport default function ImageGallery({ searchValue, handleModalOpen }) {\r\n  const [images, setImages] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const [status, setStatus] = useState(INITIAL_STATUS.idle)\r\n  const [moreLoadStatus, setMoreLoadStatus] = useState(INITIAL_STATUS.idle)\r\n  const [page, setPage] = useState(1)\r\n  const imageToScroll = useRef()\r\n\r\n  useEffect(() => {\r\n    if (searchValue === '') {\r\n      return\r\n    }\r\n\r\n    setStatus(INITIAL_STATUS.pending)\r\n    fetchImages(searchValue)\r\n      .then(data => {\r\n        if (data.length === 0) {\r\n          throw new Error(`Unfortunately, nothing found with search name \"${searchValue}\" :( `)\r\n        } else {\r\n          setImages([...data])\r\n          setStatus(INITIAL_STATUS.resolved)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setError(error)\r\n        setStatus(INITIAL_STATUS.rejected)\r\n      })\r\n  }, [searchValue])\r\n\r\n  useEffect(() => {\r\n    if (page === 1) {\r\n      return\r\n    }\r\n\r\n    setMoreLoadStatus(INITIAL_STATUS.pending)\r\n    fetchImages(searchValue, page)\r\n      .then(data => {\r\n        if (data.length === 0) {\r\n          throw new Error(`Images with tag ${searchValue} has been finished.`)\r\n        } else {\r\n          setImages(prevImages => [...prevImages, ...data])\r\n          setMoreLoadStatus(INITIAL_STATUS.resolved)\r\n          const ulElems = imageToScroll.current.children\r\n          ulElems[ulElems.length - 9].scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setError(error)\r\n        setMoreLoadStatus(INITIAL_STATUS.rejected)\r\n      })\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page])\r\n\r\n  if (status === 'idle') {\r\n    return (\r\n      <Container>\r\n        <p className={s.idleText}>\r\n          Hi! Here you may find beautiful images for inspiration. <br /> It's easy! Just enter a search name in the box\r\n          at the top :)\r\n        </p>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <Container>\r\n        <Loader />\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  if (status === 'rejected') {\r\n    return (\r\n      <Container>\r\n        <p className={s.errorText}>{error.message}</p>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  if (status === 'resolved') {\r\n    return (\r\n      <Container>\r\n        <h1 className={s.title}>Gallery</h1>\r\n        <ul className={s.galleryGrid} ref={imageToScroll}>\r\n          {images.map(({ largeImageURL, webformatURL, tags }) => (\r\n            <ImageGalleryItem\r\n              key={largeImageURL}\r\n              imgUrl={webformatURL}\r\n              bigImgURL={largeImageURL}\r\n              description={tags}\r\n              onClick={e => handleModalOpen(e.currentTarget.srcset)}\r\n            />\r\n          ))}\r\n        </ul>\r\n\r\n        {moreLoadStatus === 'pending' && <Loader />}\r\n        {moreLoadStatus === 'rejected' && <p className={s.errorText}>{error.message}</p>}\r\n\r\n        <Button type=\"button\" onClick={() => setPage(prev => prev + 1)} className={buttonStyles.loadMore}>\r\n          Load more\r\n        </Button>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  searchValue: PropTypes.string.isRequired,\r\n  handleModalOpen: PropTypes.func.isRequired,\r\n}\r\n","import { useEffect } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport s from './Modal.module.css'\r\n\r\nconst modalRoot = document.getElementById('modal-portal')\r\n\r\nexport default function Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown)\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown)\r\n    }\r\n  })\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <div\r\n      className={s.overlay}\r\n      onClick={e => {\r\n        if (e.currentTarget === e.target) {\r\n          onClose()\r\n        }\r\n      }}\r\n    >\r\n      <div className={s.modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  )\r\n}\r\n\r\nModal.defaultProps = {\r\n  onClose: () => {},\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node,\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport Searchbar from './components/Searchbar'\r\nimport ImageGallery from './components/ImageGallery'\r\nimport Modal from './components/Modal'\r\nimport { Button } from './components/Button'\r\n\r\nimport buttonStyles from './components/Button/Button.module.css'\r\n\r\nexport default function App() {\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const [largeImage, setLargeImage] = useState('')\r\n\r\n  const onSubmitSearchValue = data => {\r\n    setSearchValue(data)\r\n  }\r\n\r\n  const handleModalOpen = url => {\r\n    setLargeImage(url)\r\n  }\r\n\r\n  const handleModalClose = () => setLargeImage('')\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={onSubmitSearchValue} />\r\n\r\n      <ImageGallery searchValue={searchValue} handleModalOpen={handleModalOpen} />\r\n\r\n      {largeImage !== '' && (\r\n        <Modal onClose={handleModalClose}>\r\n          <Button type=\"button\" className={buttonStyles.close} onClick={handleModalClose}>\r\n            X\r\n          </Button>\r\n          <img src={largeImage} alt=\"#\" className=\"largeImage\" />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}