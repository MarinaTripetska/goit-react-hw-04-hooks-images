{"version":3,"sources":["GlobalStyles.jsx","API/APIfetchGET.js","ColorPalette.jsx","components/Buttons/Buttons.jsx","components/Searchbar/SearchBar.styled.jsx","components/Searchbar/Searchbar.jsx","components/BasicStyledComponents/Container.jsx","components/ImageGalleryList/ImageGalleryList.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGalleryList/ImageGalleryList.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Loader/Loader.jsx","components/Messages/Messages.styled.jsx","components/Messages/IdleMesage.jsx","components/Messages/ErrorMessage.jsx","App.jsx","index.js"],"names":["GlobalStyle","createGlobalStyle","PATH","API_KEY","currentName","a","page","axios","get","resp","data","hits","white","violaceous","blue","Button","styled","button","SearchFormButton","LoadMoreButton","CloseButton","Header","header","Form","form","Input","input","Searchbar","onSubmit","useState","searchInput","setSearchInput","e","preventDefault","trim","window","alert","toLowerCase","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","defaultProps","ContainerStyled","div","Title","h1","GridList","ul","ListItem","li","Image","img","ImageGalleryItem","imgObj","webformatURL","tags","largeImageURL","onClick","src","alt","srcSet","prototypes","PropTypes","string","isRequired","func","ImageGalleryList","forwardRef","ref","images","handleModalOpen","modalOpen","srcset","Container","map","Overlay","ModalWindow","Modal","onClose","children","useEffect","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","document","getElementById","LoaderBox","LoaderElem","color","height","width","slideRight","keyframes","Content","p","IdleContent","ErrorContent","IdleMesage","ErrorMessage","error","message","INITIAL_STATUS","App","idle","pending","rejected","resolved","searchValue","setSearchValue","largeImage","setLargeImage","setImages","setError","status","setStatus","moreLoadStatus","setMoreLoadStatus","setPage","imgListRef","useRef","handleModalClose","fetch","then","length","Error","prevImages","ulElems","current","scrollIntoView","behavior","catch","url","prev","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bb46ccca.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n  overflow-x: hidden;\r\n}\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n}\r\nbody {\r\n      min-height: 100vh;\r\n  scroll-behavior: smooth;\r\n  \r\n  font-family: Roboto, sans-serif;\r\n}\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\nbutton {\r\n  padding: 0;\r\n  cursor: pointer;\r\n}\r\n/* !!! */\r\n.largeImage {\r\n  object-fit: contain;\r\n}\r\nul {  \r\n  list-style: none;\r\n  padding: 0;\r\n}\r\nbody,\r\nh1,\r\np,\r\nul,\r\nol,\r\nli\r\n {\r\n  margin: 0;\r\n}\r\ninput,\r\nbutton\r\n {\r\n  font: inherit;\r\n}\r\n/* Удаляем все анимации и переходы для людей, которые предпочитай их не использовать */\r\n@media (prefers-reduced-motion: reduce) {\r\n  * {\r\n    animation-duration: 0.01ms !important;\r\n    animation-iteration-count: 1 !important;\r\n    transition-duration: 0.01ms !important;\r\n    scroll-behavior: auto !important;\r\n  }\r\n}\r\n`\r\n\r\nexport default GlobalStyle\r\n","import axios from 'axios'\r\nconst PATH = 'https://pixabay.com/api/'\r\nconst API_KEY = '23596764-fc841aad9a4a9806cf99f02b3'\r\n\r\nexport async function fetch(currentName, page = 1) {\r\n  const resp = await axios.get(\r\n    `${PATH}?q=${currentName}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=9`,\r\n  )\r\n\r\n  return resp.data.hits\r\n}\r\n","export const white = '#fff'\r\nexport const violaceous = '#3f51b5'\r\nexport const violaceousDark = '#303f9f'\r\nexport const blue = '#364e92'\r\nexport const red = '#ff6b31'\r\n\r\nexport const overlayDark = 'rgba(0, 0, 0, 0.466)'\r\n","import styled from 'styled-components'\r\n\r\nimport { white, violaceous, violaceousDark } from 'ColorPalette'\r\n\r\nconst Button = styled.button`\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: ${white};\r\n  background-color: ${violaceous};\r\n  border: 0;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\r\n    0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${violaceousDark};\r\n  }\r\n`\r\n\r\nexport const SearchFormButton = styled(Button)`\r\n  display: inline-block;\r\n  min-width: 180px;\r\n  height: 48px;\r\n  opacity: 0.6;\r\n  border-radius: 3px;\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n  }\r\n`\r\nexport const LoadMoreButton = styled(Button)`\r\n  display: block;\r\n  font-size: 20px;\r\n  margin: 50px auto;\r\n  min-width: 180px;\r\n  padding: 10px;\r\n  border-radius: 3px;\r\n`\r\nexport const CloseButton = styled(Button)`\r\n  display: inline-block;\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  width: 35px;\r\n  height: 35px;\r\n\r\n  border-radius: 50%;\r\n  text-align: center;\r\n  line-height: 35px;\r\n  opacity: 0.4;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { white, violaceous } from 'ColorPalette'\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 2;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  min-height: 64px;\r\n  padding: 12px 24px;\r\n\r\n  color: ${white};\r\n  background-color: ${violaceous};\r\n\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n    0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: ${white};\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 10px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`\r\n","import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { SearchFormButton } from '../Buttons'\r\nimport { Header, Form, Input } from './SearchBar.styled'\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [searchInput, setSearchInput] = useState('')\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    if (searchInput.trim() === '') {\r\n      window.alert('Please, provide search name!')\r\n      setSearchInput('')\r\n      return\r\n    }\r\n\r\n    onSubmit(searchInput.toLowerCase().trim())\r\n    setSearchInput('')\r\n  }\r\n\r\n  return (\r\n    <Header>\r\n      <Form onSubmit={handleSubmit}>\r\n        <SearchFormButton type=\"submit\">Search</SearchFormButton>\r\n\r\n        <Input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={e => setSearchInput(e.currentTarget.value)}\r\n          value={searchInput}\r\n        />\r\n      </Form>\r\n    </Header>\r\n  )\r\n}\r\n\r\nSearchbar.defaultProps = {\r\n  onSubmit: () => null,\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst ContainerStyled = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  height: auto;\r\n  padding: 0 15px;\r\n`\r\n\r\nexport default ContainerStyled\r\n","import styled from 'styled-components'\r\nimport { blue } from 'ColorPalette'\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  color: ${blue};\r\n`\r\nexport const GridList = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n\r\n  margin: 0 auto;\r\n`\r\n","import PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst ListItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\r\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`\r\nexport default function ImageGalleryItem({ imgObj: { webformatURL, tags, largeImageURL }, onClick }) {\r\n  return (\r\n    <ListItem>\r\n      <Image src={webformatURL} alt={tags} srcSet={largeImageURL} onClick={onClick} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n  tags: 'image',\r\n  largeImageURL: '../src/images/DefaultImage.png',\r\n}\r\n\r\nImageGalleryItem.prototypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n","import { forwardRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ContainerStyled from '../BasicStyledComponents/Container'\r\nimport { Title, GridList } from './ImageGalleryList.styled'\r\nimport ImageGalleryItem from '../ImageGalleryItem'\r\n\r\nconst ImageGalleryList = forwardRef(({ images, handleModalOpen }, ref) => {\r\n  const modalOpen = e => {\r\n    handleModalOpen(e.currentTarget.srcset)\r\n  }\r\n  return (\r\n    <ContainerStyled>\r\n      <Title>Gallery</Title>\r\n      <GridList ref={ref}>\r\n        {images.map(imgObj => (\r\n          <ImageGalleryItem key={imgObj.largeImageURL} imgObj={imgObj} onClick={modalOpen} />\r\n        ))}\r\n      </GridList>\r\n    </ContainerStyled>\r\n  )\r\n})\r\n\r\nImageGalleryList.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  handleModalOpen: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGalleryList\r\n","import styled from 'styled-components'\r\nimport { overlayDark } from '../../ColorPalette'\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  z-index: 3;\r\n\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 50px;\r\n\r\n  background-color: ${overlayDark};\r\n`\r\nexport const ModalWindow = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  max-width: 100vw;\r\n  max-height: 100vh;\r\n\r\n  top: 50%;\r\n  left: 50%;\r\n\r\n  transform: translate(-50%, -50%);\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 768px;\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n    max-width: 1200px;\r\n  }\r\n`\r\n","import { useEffect } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Overlay, ModalWindow } from './Modal.styled'\r\n\r\nexport default function Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown)\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown)\r\n    }\r\n  })\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  const handleOverlayClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <Overlay onClick={handleOverlayClick}>\r\n      <ModalWindow>{children}</ModalWindow>\r\n    </Overlay>,\r\n    document.getElementById('modal-portal'),\r\n  )\r\n}\r\n\r\nModal.defaultProps = {\r\n  onClose: () => {},\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node,\r\n}\r\n","import Loader from 'react-loader-spinner'\r\nimport styled from 'styled-components'\r\n\r\nconst LoaderBox = styled.div`\r\n  height: 150px;\r\n  width: 150px;\r\n  margin: 50px auto;\r\n`\r\n\r\nexport default function LoaderElem() {\r\n  return (\r\n    <LoaderBox>\r\n      <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={150} width={150} />\r\n    </LoaderBox>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { keyframes } from 'styled-components'\r\nimport { blue, red } from 'ColorPalette'\r\n\r\nconst slideRight = keyframes`\r\n  0% {    transform: translateX(-150%);  }\r\n  50% {    transform: translateX(8%);  }\r\n  65% {    transform: translateX(-4%);  }\r\n  80% {    transform: translateX(4%);  }\r\n  95% {    transform: translateX(-2%);  }\r\n  100% {    transform: translateX(0%);  }\r\n}\r\n`\r\nconst Content = styled.p`\r\n  padding: 40px 20px;\r\n  font-size: 1.5em;\r\n  font-style: italic;\r\n  text-align: center;\r\n\r\n  animation-name: ${slideRight};\r\n  animation-duration: 2s;\r\n  animation-timing-function: ease-in-out;\r\n  visibility: visible !important;\r\n`\r\n\r\nexport const IdleContent = styled(Content)`\r\n  color: ${blue};\r\n`\r\nexport const ErrorContent = styled(Content)`\r\n  color: ${red};\r\n`\r\n","import { IdleContent } from './Messages.styled'\r\n\r\nexport const IdleMesage = () => {\r\n  return (\r\n    <IdleContent>\r\n      Hi! Here you may find beautiful images for inspiration. <br /> It's easy! Just enter a search name in the box at\r\n      the top :)\r\n    </IdleContent>\r\n  )\r\n}\r\n","import { ErrorContent } from './Messages.styled'\r\n\r\nexport const ErrorMessage = ({ error }) => {\r\n  return <ErrorContent>{error.message}</ErrorContent>\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport { fetch } from 'API/APIfetchGET'\r\nimport Searchbar from 'components/Searchbar'\r\nimport ImageGalleryList from 'components/ImageGalleryList'\r\nimport Modal from 'components/Modal'\r\nimport Loader from 'components/Loader'\r\nimport { CloseButton, LoadMoreButton } from 'components/Buttons'\r\nimport { IdleMesage, ErrorMessage } from 'components/Messages'\r\n\r\nconst INITIAL_STATUS = {\r\n  idle: 'idle',\r\n  pending: 'pending',\r\n  rejected: 'rejected',\r\n  resolved: 'resolved',\r\n}\r\n\r\nexport default function App() {\r\n  const { idle, pending, rejected, resolved } = INITIAL_STATUS\r\n\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const [largeImage, setLargeImage] = useState('')\r\n  const [images, setImages] = useState([])\r\n  const [error, setError] = useState(null)\r\n  const [status, setStatus] = useState(INITIAL_STATUS.idle)\r\n  const [moreLoadStatus, setMoreLoadStatus] = useState(INITIAL_STATUS.idle)\r\n  const [page, setPage] = useState(1)\r\n\r\n  //create ref for DOM element list (Gallery)\r\n  const imgListRef = useRef()\r\n\r\n  //save to the state the search keyword that comes from the form, clear the page number and the array of images\r\n  const onSubmitSearchValue = data => {\r\n    setSearchValue(data)\r\n    setImages([])\r\n    setPage(1)\r\n  }\r\n  //We write to the state url of a large image comes from ImgItem\r\n  const handleModalOpen = url => {\r\n    setLargeImage(url)\r\n  }\r\n  //When closing the modal, clear the state\r\n  const handleModalClose = () => setLargeImage('')\r\n\r\n  //fetching images\r\n  useEffect(() => {\r\n    if (searchValue === '') {\r\n      return\r\n    }\r\n\r\n    page === 1 && setStatus(pending)\r\n    page > 1 && setMoreLoadStatus(pending)\r\n\r\n    fetch(searchValue, page)\r\n      .then(data => {\r\n        if (data.length === 0 && page > 1) {\r\n          throw new Error(`Images with tag \"${searchValue}\" has been finished.`)\r\n        } else if (data.length === 0) {\r\n          throw new Error(`Unfortunately, nothing found with search name \"${searchValue}\" :( `)\r\n        } else {\r\n          setImages(prevImages => [...prevImages, ...data])\r\n          setStatus(resolved)\r\n          setMoreLoadStatus(resolved)\r\n          //find 1 child elem of Gallery list from LoadMore fetch and scroll to it\r\n          if (page > 1) {\r\n            const ulElems = imgListRef.current.children\r\n            ulElems[ulElems.length - 9].scrollIntoView({ behavior: 'smooth' })\r\n          }\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setError(error)\r\n        page === 1 && setStatus(rejected)\r\n        page > 1 && setMoreLoadStatus(rejected)\r\n      })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchValue, page])\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={onSubmitSearchValue} />\r\n\r\n      {status === idle && <IdleMesage />}\r\n      {status === pending && <Loader />}\r\n      {status === resolved ? (\r\n        <>\r\n          <ImageGalleryList images={images} handleModalOpen={handleModalOpen} ref={imgListRef} />\r\n\r\n          {moreLoadStatus === idle || moreLoadStatus === resolved ? (\r\n            <LoadMoreButton type=\"button\" onClick={() => setPage(prev => prev + 1)}>\r\n              Load more\r\n            </LoadMoreButton>\r\n          ) : null}\r\n\r\n          {moreLoadStatus === pending && <Loader />}\r\n          {moreLoadStatus === rejected && <ErrorMessage error={error} />}\r\n        </>\r\n      ) : null}\r\n\r\n      {largeImage !== '' && (\r\n        <Modal onClose={handleModalClose}>\r\n          <CloseButton type=\"button\" onClick={handleModalClose} children=\"X\" />\r\n          <img src={largeImage} alt=\"#\" />\r\n        </Modal>\r\n      )}\r\n\r\n      {status === rejected && <ErrorMessage error={error} />}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport GlobalStyle from 'GlobalStyles'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}